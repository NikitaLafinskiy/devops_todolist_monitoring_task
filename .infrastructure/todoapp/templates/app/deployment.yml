apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}-deployment
  namespace: {{ .Values.common.namespace }}
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: {{ .Values.deployment.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.deployment.rollingUpdate.maxUnavailable }}
  selector:
    matchLabels:
      app: {{ .Values.todoapp.labelName }}
  template:
    metadata:
      labels:
        app: {{ .Values.todoapp.labelName }}
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      containers:
      - name: {{ .Chart.Name }}-container
        image: {{ .Values.todoapp.image.name }}:{{ .Values.todoapp.image.tag }}
        volumeMounts:
        - name: data
          mountPath: /app/data
        - name: app-secrets-volume
          mountPath: "/app/secrets"
          readOnly: true
        - name: app-config-volume
          mountPath: "/app/configs"
          readOnly: true
        {{- with .Values.deployment.resources }}
        resources:
          requests:
            memory: {{ .requests.memory }}
            cpu: {{ .requests.cpu }}
          limits:
            memory: {{ .limits.memory }}
            cpu: {{ .limits.cpu }}
        {{- end }}
        env:
        {{- range $k, $v := .Values.config }}
        - name: {{ $k }}
          valueFrom:
            configMapKeyRef:
              name: {{ $.Chart.Name }}-config
              key: {{ $k }}
        {{- end }}
        {{- range $k, $v := .Values.secret }}
        - name: {{ $k }}
          valueFrom:
            secretKeyRef:
              name: {{ $.Chart.Name }}-secret
              key: {{ $k }}
        {{- end }}
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: api/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: api/ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: {{ .Chart.Name }}-pvc-data
      - name: app-secrets-volume
        secret:
          secretName: {{ .Chart.Name }}-secret
      - name: app-config-volume
        configMap:
          name: {{ .Chart.Name }}-config